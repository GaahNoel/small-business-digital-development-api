{
  "openapi": "3.0.0",
  "info": {
    "title": "Small Business Digital Development",
    "description": "API documentation",
    "version": "1.0.0",
    "contact": {
      "email": "ga.noel@outlook.com"
    }
  },
  "paths": {
    "/api/account/all": {
      "get": {
        "tags": ["Account"],
        "summary": "Get All Account ids",
        "description": "Get All Account ids",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/account/{id}": {
      "get": {
        "tags": ["Account"],
        "summary": "Get Account by Id",
        "description": "Get Account by Id",
        "parameters": [{
          "name": "token",
          "in": "header",
          "description": "Jwt token",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "id",
          "in": "path",
          "description": "Account Id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/account/email": {
      "get": {
        "tags": ["Account"],
        "summary": "GetUserByEmail",
        "description": "Get user information providing email",
        "parameters": [{
          "name": "email",
          "in": "query",
          "description": "Email of user",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/signup": {
      "post": {
        "tags": ["Account"],
        "summary": "SignUp",
        "description": "Register an account with the given email and password, or not given password if was socialMedia",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "required": true
                  },
                  "email": {
                    "type": "string",
                    "required": true
                  },
                  "provider": {
                    "type": "string",
                    "enum": ["credentials", "socialMedia"]
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "example": {
                  "name": "user 1",
                  "email": "user@example.com",
                  "password": "123456",
                  "provider": "email"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/account/check-password": {
      "post": {
        "tags": ["Account"],
        "summary": "Check Password",
        "description": "Check if password matches with the given account id",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "required": true
                  },
                  "password": {
                    "type": "string",
                    "required": true
                  }
                },
                "example": {
                  "email": "user@example.com",
                  "password": "123456"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/account/edit/{id}": {
      "put": {
        "tags": ["Account"],
        "summary": "Edit Account",
        "description": "Edit account information",
        "parameters": [{
          "name": "token",
          "in": "header",
          "description": "Jwt token",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "id",
          "in": "path",
          "description": "Account Id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "required": false
                  },
                  "email": {
                    "type": "string",
                    "required": false
                  },
                  "password": {
                    "type": "string",
                    "required": false
                  }
                },
                "example": {
                  "email": "user@example.com",
                  "password": "123456",
                  "name": "user 1"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/account/verify": {
      "put": {
        "tags": ["Account"],
        "summary": "Verify",
        "description": "Make user verified with jwt including account id",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "required": true
                  }
                },
                "example": {
                  "id": "jwt-with-id"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/business/list/{accountId}": {
      "get": {
        "tags": ["Business"],
        "summary": "List",
        "description": "List business",
        "parameters": [{
          "name": "accountId",
          "in": "path",
          "description": "Account id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "description": "Success"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/business/cities/": {
      "get": {
        "tags": ["Business"],
        "summary": "List Cities of Business",
        "description": "List Cities of Business",
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "No business found on db"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/business/list/": {
      "get": {
        "tags": ["Business"],
        "summary": "List Business",
        "description": "List Business",
        "parameters": [
          {
            "name": "latitude",
            "in": "params",
            "description": "latitude",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "longitude",
            "in": "params",
            "description": "longitude",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "radius",
            "in": "params",
            "description": "radius",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "city",
            "in": "params",
            "description": "city name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "in": "params",
            "description": "state",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "BadRequest - Missing Required Params"
          },
          "404": {
            "description": "Business not found for the location provided"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/business/{businessId}": {
      "get": {
        "tags": ["Business"],
        "summary": "List By Id",
        "description": "List business by id",
        "parameters": [
        {
          "name": "businessId",
          "in": "params",
          "description": "Business Id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "businessId": {
                    "type": "string",
                    "required": false
                  }
                },
                "example": {
                  "businessId":"any-business-id"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description":"Success"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/business/create": {
      "post": {
        "tags": ["Business"],
        "summary": "Create",
        "description": "Created new business for user",
        "parameters": [{
          "name": "token",
          "in": "header",
          "description": "Jwt token",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "required": true
                  },
                  "description": {
                    "type": "string",
                    "required": true
                  },
                  "imageUrl": {
                    "type": "string",
                    "required": true
                  },
                  "accountId": {
                    "type": "string",
                    "required": true
                  },
                  "city": {
                    "type": "string",
                    "required": true
                  },
                  "country": {
                    "type": "string",
                    "required": true
                  },
                  "latitude": {
                    "type": "string",
                    "required": true
                  },
                  "longitude": {
                    "type": "string",
                    "required": true
                  },
                  "state": {
                    "type": "string",
                    "required": true
                  },
                  "street": {
                    "type": "string",
                    "required": true
                  },
                  "zip": {
                    "type": "string",
                    "required": true
                  },
                  "maxPermittedCouponPercentage": {
                    "type": "number",
                    "required": false
                  }
                },
                "example": {
                  "name":"business 1",
                  "description":"business for some reason",
                  "imageUrl":"image.url.com",
                  "accountId":"123456",
                  "city":"city",
                  "country":"country",  
                  "latitude":"123123",
                  "longitude":"-123123",
                  "state":"state",
                  "street":"street",
                  "zip":"111111000",
                  "maxPermittedCouponPercentage": 10
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/business/edit/{businessId}": {
      "put": {
        "tags": ["Business"],
        "summary": "Edit",
        "description": "Edit business for user",
        "parameters": [{
          "name": "token",
          "in": "header",
          "description": "Jwt token",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "businessId",
          "in": "params",
          "description": "Business Id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "required": false
                  },
                  "description": {
                    "type": "string",
                    "required": false
                  },
                  "imageUrl": {
                    "type": "string",
                    "required": false
                  },
                  "accountId": {
                    "type": "string",
                    "required": false
                  },
                  "city": {
                    "type": "string",
                    "required": false
                  },
                  "country": {
                    "type": "string",
                    "required": false
                  },
                  "latitude": {
                    "type": "string",
                    "required": false
                  },
                  "longitude": {
                    "type": "string",
                    "required": false
                  },
                  "state": {
                    "type": "string",
                    "required": false
                  },
                  "street": {
                    "type": "string",
                    "required": false
                  },
                  "zip": {
                    "type": "string",
                    "required": false
                  },
                  "maxPermittedCouponPercentage": {
                    "type": "number",
                    "required": false
                  }
                },
                "example": {
                  "name":"business 1",
                  "description":"business for some reason",
                  "imageUrl":"image.url.com",
                  "accountId":"123456",
                  "city":"city",
                  "country":"country",  
                  "latitude":"123123",
                  "longitude":"-123123",
                  "state":"state",
                  "street":"street",
                  "zip":"111111000",
                  "maxPermittedCouponPercentage": 5
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/business/delete/{businessId}": {
      "delete": {
        "tags": ["Business"],
        "summary": "Delete",
        "description": "Delete business",
        "parameters": [{
          "name": "token",
          "in": "header",
          "description": "Jwt token",
          "required": true,
          "schema": {
            "type": "string"
          }
        }, 
        {
          "name": "businessId",
          "in": "path",
          "description": "Business Id for delete",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "description": "Success"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/category/list": {
      "get": {
        "tags": ["Category"],
        "summary": "List",
        "description": "List all categories",
        "responses": {
          "200": {
            "description": "Success"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/category/create": {
      "post": {
        "tags": ["Category"],
        "summary": "Create",
        "description": "Create new category",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "required": true
                  },
                  "description": {
                    "type": "string",
                    "required": true
                  }
                },
                "example": {
                  "name":"category 1",
                  "description":"Any category of product/service"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/product/list/{businessId}": {
      "get": {
        "tags": ["Product"],
        "summary": "List",
        "description": "List all products from business",
        "parameters": [{
          "name": "businessId",
          "in": "path",
          "description": "Business id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "description": "Success"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/product/{businessId}": {
      "get": {
        "tags": ["Product"],
        "summary": "Get",
        "description": "Get product infos by id",
        "parameters": [{
          "name": "productId",
          "in": "path",
          "description": "Product id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "BadRequest - Missing Required Params"
          },
          "404": {
            "description": "NotFound"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/product/list/nearby": {
      "get": {
        "tags": ["Product"],
        "summary": "List Nearby Products",
        "description": "List Nearby Products",
        "parameters": [
          {
            "name": "latitude",
            "in": "params",
            "description": "latitude",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "longitude",
            "in": "params",
            "description": "longitude",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "radius",
            "in": "params",
            "description": "radius",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "city",
            "in": "params",
            "description": "city name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "in": "params",
            "description": "state",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "params",
            "description": "product | service",
            "required": true,
            "schema": {
              "type": "string"
            } 
          }
        ]
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "BadRequest - Missing Required Params"
          },
          "404": {
            "description": "Business not found for the location provided"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      
      
    },
    "/api/product/create": {
      "post": {
        "tags": ["Product"],
        "summary": "Create",
        "description": "Create new product",
        "parameters": [{
          "name": "token",
          "in": "header",
          "description": "Jwt token",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "required": true
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "product",
                      "service"
                    ],
                    "required": true
                  },
                  "description": {
                    "type": "string",
                    "required": true
                  },
                  "listPrice": {
                    "type": "number",
                    "required": true
                  },
                  "salePrice": {
                    "type": "number",
                    "required": true
                  },
                  "imageUrl": {
                    "type": "string",
                    "required": true
                  },
                  "businessId": {
                    "type": "string",
                    "required": true
                  },
                  "categoryId": {
                    "type": "string",
                    "required": true
                  }
                },
                "example": {
                  "name":"product 1",
                  "type":"product",
                  "description":"a product",
                  "listPrice":100,
                  "salePrice":80,
                  "imageUrl":"image.url.com",
                  "businessId":"123",
                  "categoryId":"123"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/product/edit/{productId}": {
      "put": {
        "tags": ["Product"],
        "summary": "Edit",
        "description": "Edit product",
        "parameters": [{
          "name": "token",
          "in": "header",
          "description": "Jwt token",
          "required": true,
          "schema": {
            "type": "string"
          }
        }, 
        {
          "name": "productId",
          "in": "path",
          "description": "Product Id for delete",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "required": false
                  },
                  "description": {
                    "type": "string",
                    "required": false
                  },
                  "listPrice": {
                    "type": "number",
                    "required": false
                  },
                  "salePrice": {
                    "type": "number",
                    "required": false
                  },
                  "imageUrl": {
                    "type": "string",
                    "required": false
                  }
                },
                "example": {
                  "name":"product 1",
                  "description":"a product",
                  "listPrice":100,
                  "salePrice":80,
                  "imageUrl":"image.url.com"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/product/delete/{productId}": {
      "delete": {
        "tags": ["Product"],
        "summary": "Delete",
        "description": "Delete product",
        "parameters": [{
          "name": "token",
          "in": "header",
          "description": "Jwt token",
          "required": true,
          "schema": {
            "type": "string"
          }
        }, 
        {
          "name": "productId",
          "in": "path",
          "description": "Product Id for delete",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "responses": {
          "200": {
            "description": "Success"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/order/{orderId}": {
      "get": {
        "tags": ["Order"],
        "summary": "Get order by id",
        "description": "Get order by id",
        "parameters": [{
          "name": "orderId",
          "in": "path",
          "description": "order id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }]
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      
    },
    "/api/order/account/{accountId}": {
      "get": {
        "tags": ["Order"],
        "summary": "Get order by id",
        "description": "Get order by id",
        "parameters": [{
          "name": "accountId",
          "in": "path",
          "description": "accountId",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "type",
          "in": "query",
          "description": "type of order - buy or sell",
          "required": true,
          "schema": {
            "type": "string"
          }
        }]
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      
    },
    "/api/order/create": {
      "post": {
        "tags": ["Order"],
        "summary": "Create",
        "description": "Create new order",
        "parameters": [{
          "name": "token",
          "in": "header",
          "description": "Jwt token",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": true,
                "properties": {
                    "businessId": {
                      "type": "string",
                      "required": true
                    },
                    "buyerId": {
                      "type": "string",
                      "required": true
                    },
                    "total": {
                      "type": "string",
                      "required": true
                    },
                    "items": {
                      "type": "object",
                      "properties": {
                        "productId": {
                          "type": "string",
                          "required": true
                        },
                        "quantity": {
                          "type": "number",
                          "required": true
                        }
                      }	
                    },
                    "description": {
                      "type": "string",
                      "required": true
                    },
                    "paymentMethod": {
                      "type": "CreditCard | Cash",
                      "required": true
                    },
                    "change": {
                      "type": "number",
                      "required": true
                    }
                  }
                },
                "example": {
                  "businessId":"123",
                  "buyerId":"1223",
                  "total":100,
                  "description": "any-example",
                  "paymentMethod": "CreditCard | Cash",
                  "change": 10,
                  "items": {
                    "quantity": 1,
                    "productId": "123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      
    },
    "/api/order/edit/status/{orderId}": {
      "put": {
        "tags": ["Order"],
        "summary": "Create",
        "description": "Create new order",
        "parameters": [{
          "name": "orderId",
          "in": "path",
          "description": "Jwt token",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": true,
                "properties": {
                    "status": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "example": {
                  "status":"CANCELED | CONFIRMED"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      
    },
    "/api/challenge/{accountId}": {
      "get": {
        "tags": ["Challenge"],
        "summary": "Get account challenges",
        "description": "Get account challenges",
        "parameters": [{
          "name": "token",
          "in": "header",
          "description": "Jwt token",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "accountId",
          "in": "path",
          "description": "Account Id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }]
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      
    },
    "/api/challenge/renew/{accountId}": {
      "get": {
        "tags": ["Challenge"],
        "summary": "Renew",
        "description": "Renew account challenges",
        "parameters": [{
          "name": "accountId",
          "in": "path",
          "description": "Account id",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "periodicity",
          "in": "query",
          "description": "periodicity of challenge",
          "required": true,
          "schema": {
            "type": "daily | weekly"
          }
        }]
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      
    },
    "/api/challenge/create": {
      "post": {
        "tags": ["Challenge"],
        "summary": "Create",
        "description": "Create new challenge",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": true,
                "properties": {
                    "description": {
                      "type": "string",
                      "required": true
                    },
                    "type": {
                      "type": "buyAny | sellAny | buyProximity | buyback | buyProduct | buyService | sellProduct | sellService",
                      "required": true
                    },
                    "goal": {
                      "type": "number",
                      "required": true
                    },
                    "periodicity": {
                      "type": "daily | weekly",
                      "required": true
                    },
                    "reward": {
                      "type": "number",
                      "required": true
                    }
                  }
                },
                "example": {
                  "description":"Buy 5 products",
                  "goal":5,
                  "type": "buyProduct",
                  "periodicity": "daily",
                  "reward": 50
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      
    }
  }
}